@import url('https://fonts.googleapis.com/css?family=Poppins:200,300,400,500,600,700,800,900&display=swap');

/* Implement @property for animatable custom properties
Add typed CSS custom properties with @property rule
- Define syntax type (angle, length, color, etc.)
- Enable smooth animation of gradient rotations
- Apply to conic-gradient for rotating border effect */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: "Poppins", sans-serif;
}

body {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    background: #222;
}

@property --a {
    syntax: '<angle>';
    inherits: false;
    initial-value: 0deg;
}

.box {
    position: relative;
    width: 400px;
    min-height: 400px;
    display: flex;
    justify-content: center;
    align-items: center;
    background: repeating-conic-gradient(from var(--a) 0deg, #01dbc2 0%, #01dbc2 10%, transparent 10%, transparent 50%);
    animation: animate 6s linear infinite;
}

@keyframes animate {
    0% {
        --a: 0deg;
    }

    100% {
        --a: 360deg;
    }
}

.box::before {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    background: repeating-conic-gradient(from var(--a), #01dbc2 0%, #01dbc2 10%, transparent 10%, transparent 50%);
    animation: animate 6s linear infinite;
    animation-delay: -1.5s;
}

.box::after {
    content: '';
    position: absolute;
    inset: 2px;
    border: 20px solid #222;
    background: #303030;
}

form {
    position: relative;
    z-index: 1000;
}

form h2 {
    color: #fff;
    font-weight: 500;
    margin-bottom: 20px;
    padding-top: 60px;
    width: 100%;
    text-align: center;
    letter-spacing: 0.1em;
    text-transform: uppercase;
}

.inputBox {
    position: relative;
    margin-bottom: 40px;
    width: 240px;
}

.inputBox span {
    position: absolute;
    inset: -2px;
    background: #f00;
    z-index: 1;
}

.inputBox span::before {
    content: '';
    position: absolute;
    inset: -2px;
    background: repeating-conic-gradient(
            /* L'angle de d√©part tourne ! */
            from var(--a),
            #01dbc2 0%, #01dbc2 10%,
            transparent 10%,
            transparent 50%);
    animation: animate 6s linear infinite;
    box-shadow: 0 0 0 2px #000;
}

.inputBox:nth-child(2) span::before {
    animation-delay: -1.5s;
}

.inputBox span::after {
    content: '';
    position: absolute;
    inset: 0;
    background: #292929;
}

.inputBox input {
    position: relative;
    z-index: 1000000;
    outline: none;
    border: none;
    width: 100%;
    padding: 8px 14px;
    background: transparent;
    color: #fff;
    text-transform: uppercase;
    letter-spacing: 0.1em;
}

.inputBox input::placeholder {
    color: #fff;
    opacity: 0.5;
}

.inputBox input[type='submit'] {
    background: #01dbc2;
    cursor: pointer;
    box-shadow: 0 0 0 4px #01dbc2;
    width: 100%;
    font-weight: 500;
    color: #292929;
    filter: drop-shadow(0 0 15px #01dbc2);
}

.group {
    position: relative;
    top: -10px;
    padding-bottom: 60px;
    display: flex;
    justify-content: space-between;
}

.group a {
    text-decoration: none;
    color: #fff8;
    text-transform: uppercase;
    letter-spacing: 0.1em;
    font-size: 0.75rem;
}

.group a:hover,
.group a:nth-child(2) {
    color: #01dbc2;
    filter: drop-shadow(0 0 15px #01dbc2);
}